{"ast":null,"code":"var _jsxFileName = \"/Users/Vlad/Desktop/weather-app/src/components/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport weather from \"../apis/api\";\nimport WeatherBody from \"./WeatherBody/WeatherBody\";\nimport Loader from \"./Loader/Loader\";\nimport SearchBar from \"./SearchBar/SearchBar\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.searchCity = async city => {\n      await weather.get(`daily?city=${city}&key=3883f69ab25f46dc92cdf2b5d66a1517`).then(res => {\n        const temp = res.data.data;\n        const city = res.data.city_name;\n        this.setState({\n          temp,\n          city\n        });\n      });\n    };\n\n    this.state = {\n      temp: [],\n      city: null,\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoaded: true\n    });\n  }\n\n  render() {\n    // Methods\n    const minTemp = this.state.temp.map(el => {\n      return parseInt(el.low_temp);\n    });\n    const maxTemp = this.state.temp.map(el => {\n      return parseInt(el.max_temp);\n    });\n    const icon = this.state.temp.map(el => {\n      return el.weather.code;\n    });\n    const description = this.state.temp.map(el => {\n      return el.weather.description;\n    }); // Loader\n\n    if (!this.state.isLoaded) {\n      return React.createElement(Loader, {\n        msg: \"Loading...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      city: this.state.city,\n      searchCity: this.searchCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"weatherContainer pt-3 pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"cityName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.city), React.createElement(WeatherBody, {\n      day: \"Mon\",\n      icon: icon[0],\n      minTemp: minTemp[0],\n      maxTemp: maxTemp[0],\n      description: description[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(WeatherBody, {\n      day: \"Tue\",\n      icon: icon[1],\n      minTemp: minTemp[1],\n      maxTemp: maxTemp[1],\n      description: description[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(WeatherBody, {\n      day: \"Wed\",\n      icon: icon[2],\n      minTemp: minTemp[2],\n      maxTemp: maxTemp[2],\n      description: description[2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(WeatherBody, {\n      day: \"Thu\",\n      icon: icon[3],\n      minTemp: minTemp[3],\n      maxTemp: maxTemp[3],\n      description: description[3],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(WeatherBody, {\n      day: \"Fri\",\n      icon: icon[4],\n      minTemp: minTemp[4],\n      maxTemp: maxTemp[4],\n      description: description[4],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Vlad/Desktop/weather-app/src/components/App.js"],"names":["React","weather","WeatherBody","Loader","SearchBar","App","Component","constructor","props","searchCity","city","get","then","res","temp","data","city_name","setState","state","isLoaded","componentDidMount","render","minTemp","map","el","parseInt","low_temp","maxTemp","max_temp","icon","code","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport weather from \"../apis/api\";\nimport WeatherBody from \"./WeatherBody/WeatherBody\";\nimport Loader from \"./Loader/Loader\";\nimport SearchBar from \"./SearchBar/SearchBar\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      temp: [],\n      city: null,\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ isLoaded: true });\n  }\n\n  searchCity = async city => {\n    await weather\n      .get(`daily?city=${city}&key=3883f69ab25f46dc92cdf2b5d66a1517`)\n      .then(res => {\n        const temp = res.data.data;\n        const city = res.data.city_name;\n\n        this.setState({\n          temp,\n          city\n        });\n      });\n  };\n\n  render() {\n    // Methods\n\n    const minTemp = this.state.temp.map(el => {\n      return parseInt(el.low_temp);\n    });\n\n    const maxTemp = this.state.temp.map(el => {\n      return parseInt(el.max_temp);\n    });\n\n    const icon = this.state.temp.map(el => {\n      return el.weather.code;\n    });\n\n    const description = this.state.temp.map(el => {\n      return el.weather.description;\n    });\n\n    // Loader\n    if (!this.state.isLoaded) {\n      return <Loader msg={\"Loading...\"} />;\n    }\n    return (\n      <div className=\"App\">\n        <React.Fragment>\n          <SearchBar city={this.state.city} searchCity={this.searchCity} />\n        </React.Fragment>\n        <div className=\"weatherContainer pt-3 pb-3\">\n          <h5 className=\"cityName\">{this.state.city}</h5>\n          <WeatherBody day={\"Mon\"} icon={icon[0]} minTemp={minTemp[0]} maxTemp={maxTemp[0]} description={description[0]} />\n          <WeatherBody day={\"Tue\"} icon={icon[1]} minTemp={minTemp[1]} maxTemp={maxTemp[1]} description={description[1]} />\n          <WeatherBody day={\"Wed\"} icon={icon[2]} minTemp={minTemp[2]} maxTemp={maxTemp[2]} description={description[2]} />\n          <WeatherBody day={\"Thu\"} icon={icon[3]} minTemp={minTemp[3]} maxTemp={maxTemp[3]} description={description[3]} />\n          <WeatherBody day={\"Fri\"} icon={icon[4]} minTemp={minTemp[4]} maxTemp={maxTemp[4]} description={description[4]} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}